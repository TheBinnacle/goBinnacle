# Scaffolding generated by Casein v5.1.1.5

module Casein
  class StoriesController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Articles'
  		@stories = Story.order(sort_order(:category)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View article'
      @story = Story.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new article'
    	@story = Story.new
    end

    def create
      @story = Story.new story_params
    
      if @story.save
        flash[:notice] = 'Well done. The "man" thanks you.'
        redirect_to casein_stories_path
      else
        flash.now[:warning] = 'ATTENTION: I screwed something up and broke it. Have a nice day.'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update story'
      
      @story = Story.find params[:id]
    
      if @story.update_attributes story_params
        flash[:notice] = 'Your mistake has been corected, story updated.'
        redirect_to casein_stories_path
      else
        flash.now[:warning] = 'ATTENTION: Due to the nature of CMA, this could not be updated. Have a nice day. #maritime.'
        render :action => :show
      end
    end
 
    def destroy
      @story = Story.find params[:id]

      @story.destroy
      flash[:notice] = 'Story has been deleted'
      redirect_to casein_stories_path
    end
  
    private
      
      def story_params
        params.require(:story).permit(:category, :title, :author, :date, :story, :image)
      end

  end
end